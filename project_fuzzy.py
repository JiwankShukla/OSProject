# -*- coding: utf-8 -*-
"""Project_Fuzzy

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TCLyDd3NswxwM8Fllvx929jA2nV-iltv
"""

pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

fever = ctrl.Antecedent(np.arange(0,11,1), 'fever')
stomachache = ctrl.Antecedent(np.arange(0,11,1), 'stomachache')
drycough = ctrl.Antecedent(np.arange(0,11,1), 'drycough')
coldchill = ctrl.Antecedent(np.arange(0,11,1), 'coldchill')
prognosis = ctrl.Consequent(np.arange(0,11,1), 'prognosis')

fever['low'] = fuzz.trimf(fever.universe,[0,0,4.5])
fever['mild'] = fuzz.trimf(fever.universe,[2,4.5,8])
fever['severe'] = fuzz.trimf(fever.universe,[4.5,10,10])

stomachache['low'] = fuzz.trimf(stomachache.universe,[0,0,4.5])
stomachache['mild'] = fuzz.trimf(stomachache.universe,[2,4.5,8])
stomachache['severe'] = fuzz.trimf(stomachache.universe,[4.5,10,10])

drycough['low'] = fuzz.trimf(drycough.universe,[0,0,4.5])
drycough['mild'] = fuzz.trimf(drycough.universe,[2,4.5,8])
drycough['severe'] = fuzz.trimf(drycough.universe,[4.5,10,10])

coldchill['low'] = fuzz.trimf(coldchill.universe,[0,0,4.5])
coldchill['mild'] = fuzz.trimf(coldchill.universe,[2,4.5,8])
coldchill['severe'] = fuzz.trimf(coldchill.universe,[4.5,10,10])


prognosis['none'] = fuzz.trimf(prognosis.universe,[0,0,4.5])
prognosis['fever'] = fuzz.trimf(prognosis.universe,[2,4.5,6])
prognosis['typhoid'] = fuzz.trimf(prognosis.universe,[4.5,10,10])

prognosis.view()
fever.view()

rule1 = ctrl.Rule(fever['low'], prognosis['none'])
rule2 = ctrl.Rule(fever['mild'], prognosis['fever'])
rule3 = ctrl.Rule(fever['severe'], prognosis['none'])
rule4 = ctrl.Rule(fever['low'] & stomachache['low'], prognosis['none'])
rule5 = ctrl.Rule(fever['low'] & stomachache['mild'], prognosis['none'])
rule6 = ctrl.Rule(fever['mild'] & stomachache['mild'] & drycough['low'] & coldchill['low'], prognosis['fever'])
rule7 = ctrl.Rule(fever['mild'] & stomachache['mild'] & drycough['low'] & coldchill['mild'], prognosis['typhoid'])
rule8 = ctrl.Rule(fever['mild'] & stomachache['mild'] & drycough['low'] & coldchill['severe'], prognosis['fever'])
rule9 = ctrl.Rule(fever['mild'] & stomachache['mild'] & drycough['severe'] & coldchill['low'], prognosis['typhoid'])

prognosis_ctrl = ctrl.ControlSystem([rule1, rule2, rule3, rule4, rule5, rule6, rule7, rule8, rule9])
result = ctrl.ControlSystemSimulation(prognosis_ctrl)
print(" Severity of each symptoms lies between 0 ~ 10\n")
result.input['fever'] = float(input(" Enter the severity of fever: "))
result.input['stomachache'] = float(input(" Enter the severity of stomachache: "))
result.input['drycough'] = float(input(" Enter the severity of drycough: "))
result.input['coldchill'] = float(input(" Enter the severity of coldchill: "))
result.compute()
print(result.output['prognosis'])
prognosis.view(sim=result)

if result.output['prognosis']>=5.7:
  print("Typhoid")
elif result.output['prognosis']>=2.8:
  print("Fever")
else:
  print("None")